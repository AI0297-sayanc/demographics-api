openapi: 3.0.0
info:
  title: Demographic API
  description: |
    **This demographics API will add value to the public Census data. It can be used to augment the public Census data. The Census data provides information about population counts, age ranges, ethnicities, and other demographic information.These proprietary models use to calculate demographics information for any area defined.**
    
  version: 0.1.9
# servers:
#   - url: http://api.example.com/v1
#     description: Optional server description, e.g. Main (production) server
#   - url: http://staging-api.example.com
#     description: Optional server description, e.g. Internal staging server for testing

security:
  - bearerAuth: []


paths:

  /login:
    post:
      tags:
       - User
      summary: User login
      description: Authentication
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/userReq"
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/userResp'
        '401':
          description: Authentication Failed!
        '404':
          description: User Not Found





  /search/radius:
    get:
      tags:
       - Searching
      summary: A list of demographics within radius.
      description: Given a point in form of coordinates(lat,long) and a scaler distance,it then calculates a circle of the specified radius centered at the given point. The circle represents an area on the Earth's surface within which the demographics are to be searched. It returns all available demographics within that circle.
      parameters:
        - in: query
          name: longitude
          description: longitude of the given point
          schema:
            type: number
        - in: query
          name: latitude
          description: latitude of the given point
          schema:
            type: number
        - in: query
          name: radius
          description: scaler distance/radius in terms of meters.
          schema:
            type: number
          

      responses:
        '200': 
          description: A JSON list of demographics within radius
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RegionResp"

 


  /search/drivetime:
    get:
      tags:
        - Searching
      
      summary: A list of demographics within drive time.
      description: Given a point in form of coordinates(lat,long) and a time in minute, it returns drive time to that point.This information can be used by the user to plan their travel time and route more effectively, based on their desired arrival time or other constraints.
      parameters:
        - in: query
          name: time
          description: Drive time
          schema:
            type: number
        - in: query
          name: longitude
          description: longitude of the given point
          schema:
            type: string
        - in:  query
          name: latitude
          description: latitude of the given point
          schema:
              type: string

      responses:
            '200': 
              description: A JSON list of demographics within drive time.
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/RegionResp"


 

    

  /search/point:
    get:
      tags:
        - Searching
      summary: Returns that region where a particular point form of coordinates(lat,long) is present.
      description: One can find a region/area where a particular point belongs.
      parameters:
        - in: query
          name: longitude
          description: longitude of the given point
          schema:
            type: number
        - in: query
          name: latitude
          description: latitude of the given point
          schema:
            type: number
        
    
      responses:
       '200':
        description: A region data
        content:
          application/json:
              schema:
                  $ref: "#/components/schemas/RegionReq"



 
  /search/customfile:
      post:
        tags:
          - Searching
        summary: Returns custom shape file.
        description: One can find a region/area with the help of shape file.
        requestBody:
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    format: binary
                    description: Custom shape file upload.


        responses:
          '200':
            description: File uploaded successfully.
      
             


 

  /regions:
    get:
      tags:
        - Region
      summary: Returns list of regions. 
      description: A balzing fast text searching utility with geographic level and additional term field with variable search mode.
      parameters:
        - in: query
          name: geographicLevel
          description: All given geographic level
          schema: 
            type: string
            enum:
              - Country
              - State
              - Country
              - Tract
              - Block Groups

        - in: query
          name: term
          description: Search georaphic level
          schema: 
            type: string


      responses:
       '200':
        description: A JSON array of region data
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/RegionResp"

 


                  
                  


  /region:
    post:
      tags:
        - Region
      summary: Add a region. 
      description: An utility to create a brand new region with geoId,name,geographic level and required geometry.
      requestBody:
        description: Add data
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref : "#/components/schemas/RegionReq"
                            

               

      responses:
        '200': 
          description: Region added successfully.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/RegionReq"



  /region/{id}:
    get:
      tags:
        - Region
      summary: Get a region.
      description: Returns complete data of a single region by providing region id.
      parameters:
        - in: path
          name: id
          required: true
          description: Numeric id of the region to get all information.
          schema:
           type: string
      
      
      responses:
        '200':
          description: Get a region data.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/RegionReq"

    put:
      tags:
        - Region
      summary: Update region data.
      description: Update any fields of region collection like geometry, geoId,name, geographiclevel etc.
      parameters:
        - in: path
          name: id
          required: true
          description: Numeric id of the region to get a region and update it.
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:  
              $ref: "#/components/schemas/RegionReq"
          
      
      
      responses:
        '200':
          description:  Region data updated successfully.
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/RegionReq"


    delete:
      tags:
        - Region
      summary: Delete region.
      description:  All fields for a particular region can be deleted using this utility.
      parameters:
        - in: path
          name: id
          required: true
          description: Numeric id of the region to get a region and delete it.
          schema:
            type: string
      
      

      responses:
        '200':
          description: Region data deleted.
         




    
  

  
  /census:
    post:
      tags:
        - Census Data
      summary: Add census data
      requestBody:
        description: Add census data
        required: true
        content:
          application/json:
            schema:
              $ref : "#/components/schemas/CensusReq"
                            




      responses:
        '200': 
          description: Add census data
          content:
            application/json:
              schema: 
                $ref : "#/components/schemas/CensusReq"








  /census/{geoid}:
    get:
      tags:
        - Census Data
      summary: Get census data for particular geographic location.
      description: Returns all data for all fields for a particular census by providing a geoid.
      parameters:
        - in: path
          name: geoid
          required: true
          description: Numeric id of the census to get census data.
          schema:
            type: string
      
      
      responses:
        '200':
          description: A census data.
          content:
            application/json:
              schema:
                $ref : "#/components/schemas/CensusReq"


    put:
      tags:
        - Census Data
      summary: Update census data
      description: This utility can be used to update cesus data for a particular geographic region.
      parameters:
        - in: path
          name: geoid
          required: true
          description: Numeric id of the census to update census data.
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:  
             $ref: "#/components/schemas/CensusReq"
        
      
      
      responses:
        '200':
          description: Census data updated successfully.
          content:
            application/json:
               schema:
                type: object
                $ref: "#/components/schemas/CensusReq"


    delete:
      tags:
        - Census Data
      summary: Delete cesus data
      description: This utility can be used to delete a particular census data by providing a geoid.
      parameters:
        - in: path
          name: geoid
          required: true
          description: Numeric id of the census to delete census data.
          schema:
            type: string
      
      

      responses:
        '200':
          description: Census data deleted.
          

  /references:
    get:
      tags:
        - Reference
      summary: Returns list of references. 
      description: Returns a list of references.
      parameters:
        - in: query
          name: term
          schema: 
            type: string
          description: Filter by search term (on field 'title')
      
      responses:
        '200':
          description: A JSON array of reference data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      description: id of the reference.
                      example:  643906210ef1dbad88a04a13
                    tableId:
                      type: string
                      description: table id of the refernce.
                      example: B01001
                    line:
                      type: string
                      description: reference line.
                      example: 1
                    indent:
                      type: string
                      description: indent of the reference.
                      example: 0
                    uniqueId:
                      type: string
                      description: unique id of the reference.
                      example: B01001_001
                    label:
                      type: string
                      description: label of the reference.
                      example: total
                    title: 
                      type: string
                      description: title of the reference.
                      example: sex by age
                    universe:
                     type: string
                     description: universe of the reference.
                     example: total population
                    type:
                      type: string
                      description: type of the reference.
                      example: int



components:
  securitySchemes:
    bearerAuth:    
      type: http
      scheme: bearer
      bearerFormat: JWT 

  schemas:
    userReq:
      type: object
      properties:
        uname:
          type: string
          description: username of user
          example: AI
        password:
          example: AI
          description: password of the user.

    userResp:
      type: object
      properties:
        accessToken:
          type: string
          description: token
        uname:
          type: string
          description: username



    RegionResp:
        type: object
        properties:
          id:
            type: string
            example: 6437cad532cc19f528367b52
            description: id of a particular region
          geometry:
              type: object
              description: geometry data.
              properties:
                type:
                  type: string
                  example: "Polygon"
                  description: polygon
                coordinates:
                  type: array
                  items:
                    type: number
                  example: [[[-84.091998,30.455749],[-84.091998,30.455749]]]
                  description: coordinates
          centroid:
              type: object
              properties:
                type:
                  type: string
                  example: Point
                  description: point of centroid
                coordinates:
                  type: array
                  items:
                    type: number
                  example:  [-84.091998,30.455749]

          geoId:
              type: string
              example: 120730025072 
              description: geoid
          name:
              type: string
              example: Block Group 2, Census Tract 25.07, Leon County, Florida
              description: name
          geographicLevel:
              type: string
              example:  Block Group  
              description: geographic level
          _census:
              type: object
              description: census

              




    RegionReq:
          type: object
          properties:
                geoId:
                  type: string
                  example: 060650408211
                  description: unique geoid
                name:
                  type: string
                  example: Block Group 1, Census Tract 408.21, Riverside County, California
                  description: Name of the region
                geographicLevel:
                  type: string
                  example: Block Group
                  description: Geographic level
                centroid:
                  type: object
                  description: Center point 
                  properties:
                        type:
                          type: string
                          enum: ["Point"]
                          description: Type of centroid
                coordinates:
                          type: array
                          description: latitide and longitude for a point separated by comma.
                          minItems: 2
                          maxItems: 2
                          example:
                            - -80.15759512639274
                            - 26.83290721768844
                          items:
                            type: number
                            format: float
                geometry:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: ["Polygon"]
                      description: Type of geometry.
                    coordinates:
                          type: array
                          description: latitide and longitude for a point separated by comma.
                          items:
                            items:
                              example:  [-80.15759512639274,26.83290721768844]
                              items:
                                type: number
                                format: float



    CensusReq:
      properties:
          geoId:
            type: string
            example: 060371972001
            description: geoid
          name:
            type: string
            example: Block Group 1, Census Tract 1972, Los Angeles County, California
            description: name
          geographicLevel:
            type: string
            example: Block Group
            description: geographic level
          state:
            type: string
            example: 06
            description: state
          country:
            type: string
            example: 037
            description: country
          tract:
            type: string
            example: 197200
            description: tract
          blockGroup:
            type: string
            example: 1
            description: block group
          latitude:
            type: number
            example: 34.08929258664407
            description: latitude
          longitude:
            type: number
            example:  -118.23513022842144
            description: longitude
          censusAttributes:
            type: object
            description: census attributes
            
