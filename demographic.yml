openapi: 3.0.0
info:
  title: Demographic API
  description: |
    **This demographics API will add value to the public Census data. It can be used to augment the public Census data. The Census data provides information about population counts, age ranges, ethnicities, and other demographic information.These proprietary models use to calculate demographics information for any area defined.**
    
  version: 0.1.9
# servers:
#   - url: http://api.example.com/v1
#     description: Optional server description, e.g. Main (production) server
#   - url: http://staging-api.example.com
#     description: Optional server description, e.g. Internal staging server for testing
paths:
  /search/radius:
    get:
      tags:
       - Searching
      summary: A list of demographics within radius.
      description: Given a point in form of coordinates(lat,long) and a scaler distance,it then calculates a circle of the specified radius centered at the given point. The circle represents an area on the Earth's surface within which the demographics are to be searched. It returns all available demographics within that circle.
      parameters:
        - in: query
          name: longitude
          description: lonitude of the given point
          schema:
            type: number
        - in: query
          name: latitude
          description: latitude of the given point
          schema:
            type: number
        - in: query
          name: radius
          description: scaler distance/radious in terms of meters.
          schema:
            type: number
          

      responses:
        '200': 
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string

 


  /search/drivetime:
    get:
      tags:
        - Searching
      
      summary: A list of demographics within drive time.
      description: Given a point in form of coordinates(lat,long) and a time in minute, it returns drive time to that point.This information can be used by the user to plan their travel time and route more effectively, based on their desired arrival time or other constraints.
      parameters:
        - in: query
          name: time
          description: Drive time
          schema:
            type: number
        - in: query
          name: longitude
          description: longitude of the given point
          schema:
            type: string
        - in:  query
          name: latitude
          description: latitude of the given point
          schema:
              type: string

      responses:
            '200': 
              description: A JSON array of user names
              content:
                application/json:
                  schema: 
                    type: array
                    items: 
                      type: string

 

    

  /search/point:
    get:
      tags:
        - Searching
      summary: Returns that region where a particular point form of coordinates(lat,long) is present.
      description: One can find a region/area where a particular point belongs.
      parameters:
        - in: query
          name: longitude
          description: longitude of the given point
          schema:
            type: number
        - in: query
          name: latitude
          description: latitude of the given point
          schema:
            type: number
        
    
      responses:
       '200':
        description: A JSON array of region data
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  property1:
                    type: string
                  property2:
                    type: integer
                  property3:
                    type: boolean

    

 




 

  /regions:
    get:
      tags:
        - Region
      summary: Returns list of regions. 
      description: A balzing fast text searching utility with geographic level and additional term field with variable search mode.
      parameters:
        - in: query
          name: geographiclevel
          description: All given geographic level
          schema: 
            type: string
            enum:
              - Country
              - State
              - Country
              - Tract
              - Block Groups

        - in: query
          name: term
          description: Search georaphic level
          schema: 
            type: string


      responses:
        '200': 
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string


  /region:
    post:
      tags:
        - Region
      summary: Add a region. 
      description: An utility to create a brand new region with geoId,name,geographic level and required geometry.
      requestBody:
        description: Add census data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                geoId:
                  type: string
                  example: 060650408211
                  description: unique geoid
                  
                name:
                  type: string
                  example: Block Group 1, Census Tract 408.21, Riverside County, California
                  description: Name of the region
                geographic level:
                  type: string
                  example: Block Group
                  description: Geographic level
                centroid:
                  type: object
                  description: Center point 
                  properties:
                        type:
                          type: string
                          enum: ["Point"]
                          description: Type of centroid
                        coordinates:
                          type: array
                          description: latitide and longitude for a point separated by comma.
                          minItems: 2
                          maxItems: 2
                          example:
                            - -80.15759512639274
                            - 26.83290721768844
                          items:
                            type: number
                            format: float

                            
                geometry:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: ["Polygon"]
                      description: Type of geometry.
                    coordinates:
                      type: array
                      description: latitide and longitude for a point separated by comma.
                      items:
                         items:
                          example:  [-80.15759512639274,26.83290721768844]
                          items:
                            type: number
                            format: float
                            

               

      responses:
        '200': 
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string


  /region/{id}:
    get:
      tags:
        - Region
      summary: Get a region.
      description: Returns complete data of a single region by providing region id.
      parameters:
        - in: path
          name: id
          required: true
          description: Numeric id of the region to get all information.
          schema:
            type: string
      
      
      responses:
        '200':
          description: A JSON array of region data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    property1:
                      type: string
                    property2:
                      type: integer
                    property3:
                      type: boolean

    put:
      tags:
        - Region
      summary: Update region data.
      description: Update any fields of region collection like geometry, geoId,name, geographiclevel etc.
      parameters:
        - in: path
          name: id
          required: true
          description: Numeric id of the region to get a region and update it.
          schema:
            type: string
      
      
      responses:
        '200':
          description: A JSON array of region data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    property1:
                      type: string
                    property2:
                      type: integer
                    property3:
                      type: boolean

    delete:
      tags:
        - Region
      summary: Delete region.
      description:  All fields for a particular region can be deleted using this utility.
      parameters:
        - in: path
          name: id
          required: true
          description: Numeric id of the region to get a region and delete it.
          schema:
            type: string
      
      

      responses:
        '200':
          description: A JSON array of region data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    property1:
                      type: string
                    property2:
                      type: integer
                    property3:
                      type: boolean




    
  

  
  /census:
    post:
      tags:
        - Census Data
      summary: Add census data
      requestBody:
        description: An utility to create census data with all required fields like tableId, line, indent, uniqueId, label,title etc.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tableId:
                  type: string
                  example: "B01001"
                  description: Tableid of the census data
                line:
                  type: string
                  example: "1"
                  description: Line of the census data

                indent:
                  type: string
                  example: "0"
                  description: Indent of the census data

                uniqueId:
                  type: string
                  example: "B01001_001"
                  description: Uniqueid of the census data

                label:
                  type: string
                  example: "Total"
                  description: Label of the census data

                title:
                  type: string
                  example: "SEX BY AGE"
                  description: Title of the census data

                universe:
                  type: string
                  example:  "Total population"
                  description: Universe of the census data

                dataType:
                  type: string
                  example : "int"
                  description: Datatype of the census data





      responses:
        '200': 
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string


  /census/{geoid}:
    get:
      tags:
        - Census Data
      summary: Get census data for particular geographic location.
      description: Returns all data for all fields for a particular census by providing a geoid.
      parameters:
        - in: path
          name: geoid
          required: true
          description: Numeric id of the census to get census data.
          schema:
            type: string
      
      
      responses:
        '200':
          description: A JSON array of region data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    property1:
                      type: string
                    property2:
                      type: integer
                    property3:
                      type: boolean

    put:
      tags:
        - Census Data
      summary: Update census data
      description: This utility can be used to update cesus data for a particular geographic region.
      parameters:
        - in: path
          name: geoid
          required: true
          description: Numeric id of the census to update census data.
          schema:
            type: string
      
      
      responses:
        '200':
          description: A JSON array of region data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    property1:
                      type: string
                    property2:
                      type: integer
                    property3:
                      type: boolean

    delete:
      tags:
        - Census Data
      summary: Delete cesus data
      description: This utility can be used to delete a particular census data by providing a geoid.
      parameters:
        - in: path
          name: geoid
          required: true
          description: Numeric id of the census to delete census data.
          schema:
            type: string
      
      

      responses:
        '200':
          description: A JSON array of region data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    property1:
                      type: string
                    property2:
                      type: integer
                    property3:
                      type: boolean

  /reference:
    get:
      tags:
        - References
      summary: Returns list of references. 
      description: Returns a list of references.
      parameters:
        - in: query
          name: term
          schema: 
            type: string
          description: Filter by search term (on field 'title')
      
      responses:
        '200':
          description: A JSON array of region data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    property1:
                      type: string
                    property2:
                      type: integer
                    property3:
                      type: boolean